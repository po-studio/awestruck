version: '3.8'

# why we use host networking for local development:
# - enables direct access to host network interfaces
# - simplifies NAT traversal testing
# - allows proper ICE candidate generation

# why we need to set host ip automatically:
# - ensures consistent network configuration
# - handles different network interfaces
# - works across different development machines
x-host-ip: &host_ip
  ${HOST_IP:-$(./scripts/get_host_ip.sh)}

# why we need multiple networks:
# - simulates aws vpc networking
# - enables service isolation
# - replicates load balancer setup
networks:
  frontend:
    name: frontend
  backend:
    name: backend

services:
  # why we need nginx:
  # - simulates aws application load balancer
  # - handles ssl termination
  # - provides consistent domain routing
  nginx:
    image: nginx:alpine
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
    networks:
      - frontend
      - backend
    depends_on:
      - webrtc-server
      - turn-server

  # why we need webrtc-server:
  # - handles audio synthesis
  # - manages webrtc connections
  # - streams real-time audio
  webrtc-server:
    build:
      context: .
      dockerfile: Dockerfile
    # why we need specific volume mounts:
    # - preserves built binary in /app
    # - enables live development of client files
    # - allows supercollider file updates
    volumes:
      - ./client:/app/client
      - ./supercollider:/app/supercollider
      - ./server:/app/server
    environment:
      - AWESTRUCK_ENV=development
      - TURN_SERVER=turn.localhost
      - TURN_USERNAME=awestruck_user
      - TURN_PASSWORD=verySecurePassword1234567890abcdefghijklmnop
      - JACK_NO_AUDIO_RESERVATION=1
      - JACK_PORT_MAX=128
      - GST_DEBUG=2
      - XDG_RUNTIME_DIR=/tmp/runtime-appuser
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AWESTRUCK_API_KEY=${AWESTRUCK_API_KEY}
      - GST_BUFFER_SIZE=4194304
      - JACK_PERIOD_SIZE=1024
      - JACK_PERIODS=2
      - JACK_PRIORITY=95
      - JACK_REALTIME_PRIORITY=95
      - JACK_TIMEOUT=2000
      - JACK_BUFFER_SIZE=2048
    ports:
      - "8080:8080"
    networks:
      - backend
    depends_on:
      - turn-server

  # why we need turn-server:
  # - provides consistent turn setup locally
  # - enables testing of ice candidates
  # - mirrors aws turn configuration
  turn-server:
    build:
      context: .
      dockerfile: Dockerfile.turn2
    # why we need bridge networking for turn:
    # - mirrors aws vpc networking
    # - enables proper service discovery
    # - maintains network isolation
    networks:
      - backend
    ports:
      - "3478:3478/udp"
      - "3479:3479/tcp"
      - "49152-49252:49152-49252/udp"
    environment:
      - AWESTRUCK_ENV=development
      - TURN_REALM=localhost
      # why we need host's actual ip for turn:
      # - required by pion turn implementation
      # - ensures browser compatibility
      # - enables proper ice candidate generation
      - PUBLIC_IP=${HOST_IP:-$(./scripts/get_host_ip.sh)}
      - USERS=awestruck_user=verySecurePassword1234567890abcdefghijklmnop
      - MIN_PORT=49152
      - MAX_PORT=49252 